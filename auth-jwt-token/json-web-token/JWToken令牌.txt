TODO. JSON Web Token设计模型(生成和请求流程)
1. 用户使用用户名密码来请求服务器
2. 服务器进行验证用户的信息
3. 服务器通过验证发送给用户一个token
4. 客户端存储token(session数据)，并在每次请求时附上token
5. 服务端验证token值，并返回数据

TODO: JWT签发策略和持久化
1. JWT在服务器端签发生成
   - 服务端策略: Access-Control-Allow-Origin: * 支持CORS(跨来源资源共享)
   - 服务端私钥: 避免泄漏，用来进行JWT签发和验证，以免客户端签发有效的JWT
2. JWT是后端无状态、前端存储的解决方案，Token的存储由前端完成
3. 令牌持久化方式，单节点服务可以存放在Session中，集群可以存放在Redis中

TODO. JWT访问令牌Token生成
JWT令牌的结构为三部分组成：令牌头(Header).负载信息(Payload).签名(Signature)
- 令牌头：定义了令牌的元数据，如令牌采用的签名算法，默认为HMAC SHA256算法
- 负载信息：由签发者自定义的数据，一般包括过期时间(Expire)、授权范围(Authority)、令牌ID编号(JTI)等
- 签名：签名是使用私钥和头部指定的算法，前两部分进行的数字签名，防止数据被篡改

负载中至少包含当前用户，且不应存放过多信息导致HTTP Header过大，尤其不应存放敏感信息
令牌头和负载均为JSON结构，进行Base64URLEncode之后进行签名，然后用“.”连接成令牌报文